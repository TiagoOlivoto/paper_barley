sel_2019FI <- sels$`2019FI`$data
sel_2020DI <- sels$`2020DI`$data
sel_2020FI <- sels$`2020FI`$data
# Selected in DI
DI <- set_union(sel_2019DI, sel_2020DI)
# Selected in FI
FI <- set_union(sel_2019FI, sel_2020FI)
set_union(DI, FI)
set_intersect(DI, FI)
set_intersect(sel_2019DI, sel_2020DI, sel_2019FI, sel_2020FI)
set_intersect
set_helper
set_intersect(sel_2019DI, sel_2020DI, sel_2019FI, sel_2020FI, pairs = TRUE)
names.window <- c('1-initial growing',
'2-Tillering',
'3-Boosting',
'4-Heading/Flowering',
"5-Grain filling",
"6-Physiological maturity")
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("trange", "tmax", "tmin", "dbp", "etp", "vpd"),
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 140),
names.window = names.window)
out2 <-
separate(out,
env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
library(EnvRtype)
library(rio)
library(ggh4x)
library(ggridges)
library(corrr)
library(tidyverse)
library(metan)
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
env_data <- import("https://bit.ly/env_data_nasapower")
str(env_data)
id_var <- names(env_data)[10:19]
names.window <- c('1-initial growing',
'2-Tillering',
'3-Boosting',
'4-Heading/Flowering',
"5-Grain filling",
"6-Physiological maturity")
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("trange", "tmax", "tmin", "dbp", "etp", "vpd"),
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 140),
names.window = names.window)
out2 <-
separate(out,
env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
# plot the distribution of envirotypes for dbp
p1 <-
out2 |>
subset(var == "tmax") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative frequency of the maximum temperature (ÂºC)')+
ylab("Crop stage")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
# plot the distribution of envirotypes for dbp
p2 <-
out2 |>
subset(var == "vpd") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~frequency~of~the~vapor~pressure~deficit~~(KPa~day^{-1})))+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
# plot the distribution of envirotypes for dbp
p3 <-
out2 |>
subset(var == "dbp") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~frequency~of~the~rainfall~deficit~~(mm~day^{-1})))+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
arrange_ggplot(p1, p2, p3,
ncol = 1,
tag_levels = "a")
ggsave("figs/fig3_typology.png", width = 10, height = 9)
mod_env <-
gamem(df_traits,
gen = GENOTYPES,
rep = REP,
block = IBLOCK,
resp = CAN:GY,
by = ENV)
df_traits <-
import("https://bit.ly/df_barley") |>
as_factor(1:6)
mod_env <-
gamem(df_traits,
gen = GENOTYPES,
rep = REP,
block = IBLOCK,
resp = CAN:GY,
by = ENV)
mgidi_di <-
mgidi(mod_env,
ideotype = c("l, l, h, h, h, h"),
weights = c(1,1,2,1,1,5), # remove to consider equal heigths
SI = 5,
verbose = FALSE)
df_mgidi <-
gmd(mgidi_di, "MGIDI") |>
mutate(selected = ifelse(Genotype %in% set_union(sel_2019DI, sel_2020DI,
sel_2019FI, sel_2020FI),
"Yes",
"No")) |>
subset(selected == "Yes")
sels <- sel_gen(mgidi_di) |> split_factors(ENV)
sel_2019DI <- sels$`2019DI`$data
sel_2019FI <- sels$`2019FI`$data
sel_2020DI <- sels$`2020DI`$data
sel_2020FI <- sels$`2020FI`$data
v1 <-
venn_plot(sel_2019DI, sel_2020DI,
sel_2019FI, sel_2020FI,
names = c("2019DI", "2020DI", "2019FI", "2020FI"))
# Selected in DI
DI <- set_union(sel_2019DI, sel_2020DI)
# Selected in FI
FI <- set_union(sel_2019FI, sel_2020FI)
v2 <- venn_plot(DI, FI)
arrange_ggplot(v1, v2,
tag_levels = "a")
ggsave("figs/fig6_venn.png", width = 12, height = 5)
# only in DI (23)
set_difference(DI, FI)
# only in FI (18)
set_difference(FI, DI)
# in all environments
set_intersect(sel_2019DI, sel_2020DI, sel_2019FI, sel_2020FI)
df_mgidi <-
gmd(mgidi_di, "MGIDI") |>
mutate(selected = ifelse(Genotype %in% set_union(sel_2019DI, sel_2020DI,
sel_2019FI, sel_2020FI),
"Yes",
"No")) |>
subset(selected == "Yes")
m1 <-
ggplot(df_mgidi |> subset(ENV == "2019DI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
m2 <-
ggplot(df_mgidi |> subset(ENV == "2020DI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
m3 <-
ggplot(df_mgidi |> subset(ENV == "2019FI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
m4 <-
ggplot(df_mgidi |> subset(ENV == "2020FI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
arrange_ggplot(m1, m2, m3, m4, ncol = 4)
ggsave("figs/fig7_selected.png", width = 17, height = 8)
df_mgidi <-
gmd(mgidi_di, "MGIDI") |>
mutate(selected = ifelse(Genotype %in% set_union(sel_2019DI, sel_2020DI,
sel_2019FI, sel_2020FI),
"Yes",
"No")) |>
subset(selected == "Yes")
m1 <-
ggplot(df_mgidi |> subset(ENV == "2019DI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
m2 <-
ggplot(df_mgidi |> subset(ENV == "2020DI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
m3 <-
ggplot(df_mgidi |> subset(ENV == "2019FI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
m4 <-
ggplot(df_mgidi |> subset(ENV == "2020FI"),
aes(x = MGIDI, y = reorder(Genotype, -MGIDI))) +
geom_line(aes(group = 1)) +
geom_point(size = 2.5) +
labs(x = "Multi-trait Genotype-Ideotype Distance Index",
y = "Genotypes") +
my_theme
arrange_ggplot(m1, m2, m3, m4,
ncol = 4,
tag_levels = "a")
ggsave("figs/fig7_selected.png", width = 17, height = 8)
View(df_mgidi)
View(df_traits)
colpair_map(mtcars, cov)
library(corrr)
colpair_map(mtcars, cov)
colpair_map
colpair_map(mtcars, cov)
system.time(colpair_map(mtcars, cov))
system.time(cov(mtcars))
system.time(cov(mtcars))
# Chunk 1: global_options
knitr::opts_chunk$set(cache = FALSE,
comment = "##",
collapse = TRUE,
warning = FALSE,
message = FALSE)
# Chunk 2
library(EnvRtype)
library(rio)
library(ggh4x)
library(ggridges)
library(corrr)
library(tidyverse)
library(metan)
my_theme <-
theme_bw() +
theme(panel.spacing = unit(0, "cm"),
panel.grid = element_blank(),
legend.position = "bottom")
# Chunk 3
df_traits <-
import("https://bit.ly/df_barley") |>
as_factor(1:6)
# Chunk 5
env_data <- import("https://bit.ly/env_data_nasapower")
str(env_data)
id_var <- names(env_data)[10:19]
# Chunk 6
env_data |>
select_cols(id_var) |>
correlate() |>
network_plot() +
guides(color = guide_colorbar(barheight = 1,
barwidth = 20,
ticks.colour = "black")) +
theme(legend.position = "bottom")
ggsave("figs/fig1_network.png", width = 4, height = 4)
# Chunk 7
# long format for climate data
env_data_d <-
env_data |>
remove_cols(LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-env)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(YEARS, GY) |>
mutate(name = "GY", .after = YEARS) |>
rename(value = GY,
env = YEARS)
# Chunk 8
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
ggplot(env_data_d, aes(x = value, y = env, fill = env)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
ggsave("figs/fig2_density_climate.png", width = 12, height = 5)
# plot the distribution of envirotypes for dbp
p3 <-
out2 |>
subset(var == "dbp") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~frequency~of~the~rainfall~deficit~~(mm~day^{-1})))+
ylab("Crop stage")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
arrange_ggplot(p1, p2, p3,
ncol = 1,
tag_levels = "a")
ggsave("figs/fig3_typology.png", width = 10, height = 9)
names.window <- c('1-initial growing',
'2-Tillering',
'3-Booting',
'4-Heading/Flowering',
"5-Grain filling",
"6-Physiological maturity")
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("trange", "tmax", "tmin", "dbp", "etp", "vpd"),
by.interval = TRUE,
time.window = c(0, 15, 35, 65, 90, 140),
names.window = names.window)
out2 <-
separate(out,
env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop")
# plot the distribution of envirotypes for dbp
p1 <-
out2 |>
subset(var == "tmax") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative frequency of the maximum temperature (ÂºC)')+
ylab("Crop stage")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
# plot the distribution of envirotypes for dbp
p2 <-
out2 |>
subset(var == "vpd") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~frequency~of~the~vapor~pressure~deficit~~(KPa~day^{-1})))+
ylab("Crop stage")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
# plot the distribution of envirotypes for dbp
p3 <-
out2 |>
subset(var == "dbp") |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=interval,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(~env, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~frequency~of~the~rainfall~deficit~~(mm~day^{-1})))+
ylab("Crop stage")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
arrange_ggplot(p1, p2, p3,
ncol = 1,
tag_levels = "a")
ggsave("figs/fig3_typology.png", width = 10, height = 9)
430*.05
mod_env <-
gamem(df_traits,
gen = GENOTYPES,
rep = REP,
block = IBLOCK,
resp = CAN:GY,
by = ENV)
mgidi_di <-
mgidi(mod_env,
ideotype = c("l, l, h, h, h, h"),
weights = c(1,1,2,1,1,5), # remove to consider equal heigths
SI = 5,
verbose = FALSE)
sels <- sel_gen(mgidi_di) |> split_factors(ENV)
sel_2019DI <- sels$`2019DI`$data
sel_2019FI <- sels$`2019FI`$data
sel_2020DI <- sels$`2020DI`$data
sel_2020FI <- sels$`2020FI`$data
v1 <-
venn_plot(sel_2019DI, sel_2020DI,
sel_2019FI, sel_2020FI,
names = c("2019DI", "2020DI", "2019FI", "2020FI"))
# Selected in DI
DI <- set_union(sel_2019DI, sel_2020DI)
# Selected in FI
FI <- set_union(sel_2019FI, sel_2020FI)
v2 <- venn_plot(DI, FI)
arrange_ggplot(v1, v2,
tag_levels = "a")
ggsave("figs/fig6_venn.png", width = 12, height = 5)
# only in DI (23)
set_difference(DI, FI)
# only in FI (18)
set_difference(FI, DI)
# in all environments
set_intersect(sel_2019DI, sel_2020DI, sel_2019FI, sel_2020FI)
